#!/usr/bin/env python
import Pyro4
import sys
import os

__author__ = 'dankle'

usage = """Usage:
    lbatch.py [-n N] [-o STDOUT] [-u URIFILE] sh myscript.sh
    lbatch.py [-n N] [-o STDOUT] [-u URIFILE] ls
    lbatch.py [-n N] [-o STDOUT] [-u URIFILE] python mypythonscript.py

Options:
  -n N        number of cores to use.
  -o STDOUT   file for stdout
  -u URIFILE  file where the uri for the localqd is written
"""


def parse_cli():
    args = sys.argv
    args.pop(0)  # remove script name itself

    if len(args) == 0:
        print usage
        sys.exit(1)

    cliargs = {'-n': 1,
               '-u': "~/tmp/localqd",
               '-h': None}

    while str(args[0]) in cliargs.keys():
        if args[0] == '-h':
            print usage
            sys.exit(1)
        cliargs[args[0]] = args[1]
        args.pop(0)
        args.pop(0)

    if len(args) == 0:
        print usage
        sys.exit(1)

    return (cliargs, args)


def main():
    (cliargs, cmd) = parse_cli()

    print str(cliargs)
    print "command to run: " + str(cmd)

    pf = file(os.path.expanduser(cliargs["-u"]), 'r')
    uri = str(pf.read().strip())
    pf.close()

    localqd = Pyro4.Proxy(uri)

    jobid = localqd.add(num_cores=cliargs["-n"], cmd=cmd, rundir=os.getcwd())
    print "Job added to the queue with id " + str(jobid)

if __name__ == "__main__":
    sys.exit(main())
